--- 
title: "Meet the WNBA"
format:
  dashboard:
    scrolling: true
    embed-resources: true
theme:
  - united
  - styles.scss
---


```{r packages}
library(sparkline)
library(htmltools)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(stringr)
library(wehoop)
library(ggrepel)
library(reactable)
library(purrr)
library(plotly)
library(crosstalk)
```


```{r data}
# Load the configuration
config <- config::get()

# Function to get data based on the configuration

if (config$data_source == "local") {
    dat <- readRDS("dat.rds")
}
  
if (config$data_source == "wehoop") {
    dat <- load_wnba_player_box(seasons = c(2004:2024))
}

athletes <- dat |>
  select(athlete_id, athlete_display_name)

dat <- dat |>
  filter(team_id < 90)
```

```{r funcs1}
player_stats <- function(data, season_type = 2, my_season = NULL) {
  dat <- data |>
    filter(
      season_type == season_type,
      !is.na(athlete_display_name)
      )

  if (!is.null(my_season)) {
    dat <- dat %>%
      filter(season == my_season)
  }

  result <- dat |>
    replace_na(list(points = 0)) |>
    summarise(
      position = paste(
        unique(athlete_position_name),
        collapse = ", "
      ),
      total_games = if_else(
        nchar(n_distinct(game_id, na.rm = TRUE)) == 1,
        as.integer(paste0("0", n_distinct(game_id, na.rm = TRUE))),
        as.integer((n_distinct(game_id, na.rm = TRUE)))
      ),
      total_seasons = if_else(
        !is.null(my_season),
        1,
        as.integer(n_distinct(season, na.rm = TRUE))
      ),
      seasons = if_else(
        n_distinct(season, na.rm = TRUE) != 1,
        paste(range(season, na.rm = TRUE), collapse = "-"),
        as.character(range(season, na.rm = TRUE), collapse = "-")[[1]]
      ),
      latest_team = last(team_display_name),
      total_points = sum(points, na.rm = TRUE),
      ppg = list(points), # list for sparkline plots in table rows
      goals_made = sum(field_goals_made, na.rm = TRUE),
      threes_made = sum(three_point_field_goals_made, na.rm = TRUE),
      frees_made = sum(free_throws_made, na.rm = TRUE),
      total_assists = sum(assists, na.rm = TRUE),
      total_rebounds = sum(rebounds, na.rm = TRUE),
      total_steals = sum(steals, na.rm = TRUE),
      total_blocks = sum(blocks, na.rm = TRUE),
      total_turnovers = sum(turnovers, na.rm = TRUE),
      total_fouls = sum(fouls, na.rm = TRUE),
      total_ejections = sum(ejected, na.rm = TRUE),
      .by = athlete_display_name
    ) |>
    rename(
      athlete = athlete_display_name
    ) |>
    arrange(desc(total_points))

  if (!is.null(my_season)) {
    result |>
      select(-total_seasons)
  } else {
    result
  }
}

# player points per season over entire career
player_pps <- function(data, season_type = 2) {
  data |>
    filter(season_type == season_type) |>
    replace_na(list(points = 0)) |>
    summarise(
      points = as.integer(sum(points, na.rm = TRUE)),
      .by = c(athlete_display_name, season)
    ) |>
    arrange(athlete_display_name, season)
}
```

```{r funcs2}
player_doubles <- function(data, season_type = 2, my_season = NULL) {
  dat <- data |>
    filter(season_type == season_type)

  if (!is.null(my_season)) {
    dat <- dat %>%
      filter(season == my_season)
  }

  dat |>
    select(
      athlete = athlete_display_name,
      game_id,
      points,
      rebounds,
      assists,
      steals,
      blocks
    ) |>
    mutate(game_id = as.character(game_id)) |>
    arrange(game_id) |>
    mutate(
      across(
        points:blocks,
        \(x) if_else(is.na(x) | x < 10, FALSE, TRUE)
      )
    ) |>
    mutate(
      doubles = as.integer(
        rowSums(
          pick(where(
            ~ is.logical(.x)
          ))
        )
      )
    ) |>
    mutate(
      doubles_type = case_when(
        doubles == 2 ~ "double_double",
        doubles == 3 ~ "triple_double",
        doubles == 4 ~ "quadruple_double",
        doubles == 5 ~ "quintuple_double",
        .default = "other"
      )
    ) |>
    select(game_id, athlete, doubles_type) |>
    count(athlete, doubles_type) |>
    pivot_wider(
      names_from = doubles_type,
      values_from = n
    ) |>
    replace_na(
      list(double_double = 0, triple_double = 0)
    ) |>
    mutate(
      double_double = if_else(
        triple_double > 0, double_double + triple_double, double_double
      )
    ) |>
    select(athlete, triple_double, double_double)
}
```

```{r funcs3}

stat <- function(data, col, ...) {
  if (n_distinct(data$seasons) > 1) {
    data |>
      select(athlete, {{ col }}, total_seasons, seasons) |>
      arrange(desc({{ col }})) |>
      slice(1:150) |>
      mutate(rank = row_number()) |>
      select(rank, athlete, {{ col }}, total_seasons, seasons)
  } else if (n_distinct(data$seasons) == 1) {
    data |>
      select(athlete, {{ col }}, seasons) |>
      arrange(desc({{ col }})) |>
      slice(1:150) |>
      mutate(rank = row_number()) |>
      select(rank, athlete, {{ col }}, seasons)
  }
}
```

```{r dataprep}
pps <- dat |>
  player_pps(dat) |>
  arrange(athlete_display_name, season) |>
  summarise(
    pps = list(points),
    .by = athlete_display_name
  )

pdat <- dat |>
  player_stats()

player_seasons <- pdat |>
  select(athlete, total_games, total_seasons, seasons) |> 
  mutate(
    across(
      where(is.double),
      as.integer
    )
  )

doubles <- dat |>
  player_doubles()

main_stats <- pdat |>
  select(
    athlete,
    total_points,
    # total_assists,
    # total_rebounds,
    # total_steals,
    # total_blocks,
    position,
    latest_team
  )

doubles <- doubles |>
  left_join(main_stats, by = join_by(athlete)) |>
  left_join(pps, by = join_by(athlete == athlete_display_name)) |>
  left_join(
    player_seasons,
    by = join_by(athlete)
  ) |>
  mutate(rookie = if_else(seasons == year(now()), "rookie", ""))  |> 
  arrange(desc(total_points)) |>
  select(athlete, rookie, triple_double, double_double, total_points, pps, everything())

doubles <- SharedData$new(doubles, group = "experience", key = ~athlete)

```

```{r data24prep}
pdat24 <- player_stats(data = dat, my_season = 2024)
doubles24 <- player_doubles(data = dat, my_season = 2024)

main_stats24 <- pdat24 |>
  select(
    athlete,
    total_points,
    ppg,
    # total_assists,
    # total_rebounds,
    # total_steals,
    # total_blocks,
    position,
    latest_team
  )

doubles24 <- doubles24 |>
  left_join(main_stats24, by = join_by(athlete)) |>
  left_join(
    pdat |> select(athlete, seasons_played = seasons),
    by = join_by(athlete)
  ) |>
  mutate(rookie = if_else(seasons_played == year(now()), "rookie", ""))  |> 
  arrange(desc(total_points)) |> 
  select(athlete, rookie, everything())

doubles24 <- SharedData$new(doubles24, group = "experience", key = ~athlete)
```

```{r experience-prep}

seasons <- dat |> 
  summarise(
    n_seasons = n_distinct(season, na.rm = TRUE),
    n_games = n_distinct(game_id, na.rm = TRUE),
    .by = c(athlete_display_name)
  ) |> 
  arrange(n_seasons) |> 
  rename(athlete = athlete_display_name) |> 
  drop_na(athlete) |> 
  SharedData$new(group = "experience", key = ~athlete)

points <- dat |> 
  filter(season == as.integer(year(now()))) |> 
  summarise(
    n_games = n_distinct(game_id, na.rm = TRUE),
    n_points = sum(points, na.rm = TRUE),
    .by = c(athlete_display_name)
  ) |> 
  arrange(n_games) |> 
  rename(athlete = athlete_display_name) |> 
  drop_na(athlete) |> 
  SharedData$new(group = "experience", key = ~athlete)

```

```{r statsdata}
# dfs for all time stats

stat_names <- c(
  "total_games", "total_points", "goals_made", "threes_made",
  "total_assists", "total_rebounds", "total_steals",
  "total_blocks", "total_turnovers", "total_fouls"
)

stat_dfs <- stat_names %>%
  set_names() %>%
  map(~ stat(pdat, col = !!sym(.x)))


# dfs for 2024 stats

stat24_dfs <- stat_names %>%
  set_names() %>%
  map(~ stat(pdat24, col = !!sym(.x)))
```

```{r sizes}
# max width for columns in reactables
sm <- 50
md <- 70
lg <- 110
```

```{r tableoptions}

wnba_orange <- "#f57b20"
wnba_dark_orange <- "#e96500"
wnba_tan <- "#efe3c6"
wnba_gray <- "#4c4c4d"
wnba_black <- "#050707"

court_ratio <- 1/1.88

doubles_theme <- reactableTheme(
  color = "#FFFFFF",
  backgroundColor = wnba_orange,
  borderColor = wnba_tan,
  highlightColor = wnba_black,
  inputStyle = list(backgroundColor = wnba_dark_orange),
  selectStyle = list(backgroundColor = wnba_orange),
  pageButtonHoverStyle = list(backgroundColor = wnba_black),
  pageButtonActiveStyle = list(backgroundColor = wnba_black)
)

stat_theme <- reactableTheme(
  backgroundColor = wnba_tan,
  borderColor = wnba_tan,
  highlightColor = wnba_black,
  rowHighlightStyle = list(color = wnba_tan),
  inputStyle = list(backgroundColor = "#FFFFFF"),
  pageButtonHoverStyle = list(backgroundColor = wnba_black, color = wnba_tan),
  pageButtonActiveStyle = list(backgroundColor = wnba_black)
)
```

# 2024

## Row {height=400px}

```{r doubles24}
doubles24 |>
  reactable(
    compact = FALSE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
    theme = doubles_theme,
    columns = list(
      athlete = colDef(name = "Athlete", maxWidth = md),
      rookie = colDef(name = "Rookie", maxWidth = md),
      double_double = colDef(name = "Double Dbl", maxWidth = md),
      triple_double = colDef(name = "Triple Dbl", maxWidth = md),
      total_points = colDef(name = "Total Points", maxWidth = md),
      ppg = colDef(
        name = "Per Game",
        minWidth = 240,
        cell = function(values) {
          sparkline(rev(values), type = "bar", chartRangeMin = 0, chartRangeMax = max(dat$points, na.rm = TRUE), width = 240, barColor = "#ffffff", barWidth = 4, barSpacing = 1, zeroColor = "#999999", nullColor = "#000000")
        }
      ),
      position = colDef(name = "Position"),
      latest_team = colDef(name = "Team"),
      seasons_played = colDef(name = "Seasons Played")
    )
  )
```

```{r points}
points_plot <- points |> 
  ggplot(aes(x = n_games, y = n_points, group = athlete)) +
  geom_point(size = 2, color = wnba_orange)  +
  labs(
    title = "Points this Season",
    subtitle = "each dot is a player - select players in the tables",
    x = "Games Played",
    y = "Points Scored"
  ) +
  scale_x_discrete(
    limits = factor(c(1:45)),
    breaks = as.character(c(1:45))
  ) +
  theme_light() +
  theme(
    legend.position = "none",
    text = element_text(color = wnba_tan),
    axis.text = element_text(color = wnba_tan),
    axis.line = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.text.x = element_text(size = 8, angle = 300, hjust = 0),
    axis.title = element_text(size = 10),
    panel.grid = element_blank(),
    panel.background = element_rect(fill = wnba_black, color = wnba_black),
    plot.background = element_rect(fill = wnba_black, color = wnba_black),
    plot.title = element_text(size = 14),
    plot.margin = unit(c(20, 40, 20, 40), "points"),
    aspect.ratio = court_ratio
  )

ggplotly(points_plot, tooltip = c("athlete", "n_games", "n_points"))

```

## Row {height=300px}

```{r tp24}
tp24 <- stat24_dfs$total_points |>
  SharedData$new(key = ~athlete, group = "experience")

tp24 |> 
  reactable(
    compact = TRUE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
    defaultSorted = list(rank = "asc"),
    theme = stat_theme,
    columns = list(
      rank = colDef(maxWidth = sm),
      seasons = colDef(show = FALSE),
      total_points = colDef(
        name = "POINTS",
        headerClass = "my-header3",
        style = list(fontWeight = "bold")
      )
    )
  )
```

```{r ta24}
ta24 <- stat24_dfs$total_assists |>
  SharedData$new(key = ~athlete, group = "experience")

ta24 |> 
  reactable(
    compact = TRUE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
    defaultSorted = list(rank = "asc"),
    theme = stat_theme,
    columns = list(
      rank = colDef(maxWidth = sm),
      seasons = colDef(show = FALSE),
      total_assists = colDef(
        name = "ASSISTS",
        headerClass = "my-header3",
        style = list(fontWeight = "bold")
      )
    )
  )
```

```{r tr24}
tr24 <-stat24_dfs$total_rebounds |>
  SharedData$new(key = ~athlete, group = "experience")

tr24 |> 
  reactable(
    compact = TRUE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
    defaultSorted = list(rank = "asc"),
    theme = stat_theme,
    columns = list(
      rank = colDef(maxWidth = sm),
      seasons = colDef(show = FALSE),
      total_rebounds = colDef(
        name = "REBOUNDS",
        headerClass = "my-header3",
        style = list(fontWeight = "bold")
      )
    )
  )
```

```{r ts24}
ts24 <- stat24_dfs$total_steals |>
  SharedData$new(key = ~athlete, group = "experience")

ts24 |> 
  reactable(
    compact = TRUE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
    defaultSorted = list(rank = "asc"),
    theme = stat_theme,
    columns = list(
      rank = colDef(maxWidth = sm),
      seasons = colDef(show = FALSE),
      total_steals = colDef(
        name = "STEALS",
        headerClass = "my-header3",
        style = list(fontWeight = "bold")
      )
    )
  )
```

## Row {height=300px}

```{r tb24}
tb24 <- stat24_dfs$total_blocks |>
  SharedData$new(key = ~athlete, group = "experience")

tb24 |> 
  reactable(
    compact = TRUE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
    defaultSorted = list(rank = "asc"),
    theme = stat_theme,
    columns = list(
      rank = colDef(maxWidth = sm),
      seasons = colDef(show = FALSE),
      total_blocks = colDef(
        name = "BLOCKS",
        headerClass = "my-header3",
        style = list(fontWeight = "bold")
      )
    )
  )
```

```{r gm24}
gm24 <- stat24_dfs$goals_made |>
  SharedData$new(key = ~athlete, group = "experience")

gm24 |> 
  reactable(
    compact = TRUE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
    defaultSorted = list(rank = "asc"),
    theme = stat_theme,
    columns = list(
      rank = colDef(maxWidth = sm),
      seasons = colDef(show = FALSE),
      goals_made = colDef(
        name = "GOALS",
        headerClass = "my-header3",
        style = list(fontWeight = "bold")
      )
    )
  )
```

```{r tm24}
tm24 <- stat24_dfs$threes_made |>
  SharedData$new(key = ~athlete, group = "experience")

tm24 |> 
  reactable(
    compact = TRUE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
    defaultSorted = list(rank = "asc"),
    theme = stat_theme,
    columns = list(
      rank = colDef(maxWidth = sm),
      seasons = colDef(show = FALSE),
      threes_made = colDef(
        name = "THREES",
        headerClass = "my-header3",
        style = list(fontWeight = "bold")
      )
    )
  )
```

```{r tt24}
tt24 <- stat24_dfs$total_turnovers |>
  SharedData$new(key = ~athlete, group = "experience")

tt24 |> 
  reactable(
    compact = TRUE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
    defaultSorted = list(rank = "asc"),
    theme = stat_theme,
    columns = list(
      rank = colDef(maxWidth = sm),
      seasons = colDef(show = FALSE),
      total_turnovers = colDef(
        name = "T-OVERS",
        headerClass = "my-header3",
        style = list(fontWeight = "bold")
      )
    )
  )
```

# All Time

## Row {height=400px}

```{r alldoubles}
doubles |>
  reactable(
    compact = FALSE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
    columns = list(
      athlete = colDef(name = "Athlete", maxWidth = md),
      rookie = colDef(name = "Rookie", maxWidth = md),
      double_double = colDef(name = "Double Dbl", maxWidth = md),
      triple_double = colDef(name = "Triple Dbl", maxWidth = md),
      total_points = colDef(name = "Total Points", maxWidth = md),
      pps = colDef(
        name = "Per Season",
        minWidth = 153,
        maxWidth = 155,
        cell = function(values) {
          sparkline(values, type = "bar", width = 153, chartRangeMin = 0, barColor = "#ffffff", barWidth = 4, barSpacing = 1, zeroColor = "#999999", nullColor = "#000000")
        }
      ),
      position = colDef(name = "Position"),
      latest_team = colDef(name = "Team"),
      total_games = colDef(name = "Total Games"),
      total_seasons = colDef(name = "Total Seasons"),
      seasons = colDef(name = "Seasons")
    ),
    theme = doubles_theme
  )
```

```{r experience}
seasons_plot <- seasons |> 
  ggplot(aes(x = n_seasons, y = n_games, group = athlete)) +
  geom_point(size = 2, color = wnba_orange)  +
  labs(
    title = "Time on the Court",
    subtitle = "each dot is a player - select players in the tables",
    x = "Seasons Played",
    y = "Games Played"
  ) +
  scale_x_discrete(
    limits = factor(c(1:22)),
    breaks = as.character(c(1:22))
  ) +
  theme_light() +
  theme(
    legend.position = "none",
    text = element_text(color = wnba_tan),
    axis.text = element_text(color = wnba_tan),
    axis.line = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.text.x = element_text(size = 10),
    axis.title = element_text(size = 10),
    panel.grid = element_blank(),
    panel.background = element_rect(fill = wnba_black, color = wnba_black),
    plot.background = element_rect(fill = wnba_black, color = wnba_black),
    plot.title = element_text(size = 14),
    plot.margin = unit(c(20, 40, 20, 40), "points"),
    aspect.ratio = court_ratio
  )

ggplotly(seasons_plot, tooltip = c("athlete", "n_seasons", "n_games"))

```

## Row {height=300px}

```{r tp}
tp <- stat_dfs$total_points |>
  SharedData$new(key = ~athlete, group = "experience")

tp |> 
  reactable(
    compact = TRUE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
    theme = stat_theme,
    columns = list(
      rank = colDef(maxWidth = sm),
      total_seasons = colDef(name = "total seasons", maxWidth = md),
      seasons = colDef(maxWidth = lg),
      total_points = colDef(
        name = "POINTS",
        headerClass = "my-header3",
        style = list(fontWeight = "bold")
      )
    )
  )
```

```{r ta}
ta <- stat_dfs$total_assists |>
  SharedData$new(key = ~athlete, group = "experience")

ta |> 
  reactable(
    compact = TRUE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
    theme = stat_theme,
    columns = list(
      rank = colDef(maxWidth = sm),
      total_seasons = colDef(name = "total seasons", maxWidth = md),
      seasons = colDef(maxWidth = lg),
      total_assists = colDef(
        name = "ASSISTS",
        headerClass = "my-header3",
        style = list(fontWeight = "bold")
      )
    )
  )
```

```{r tr}
tr <- stat_dfs$total_rebounds |>
  SharedData$new(key = ~athlete, group = "experience")

tr |> 
  reactable(
    compact = TRUE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
   theme = stat_theme,
    columns = list(
      rank = colDef(maxWidth = sm),
      total_seasons = colDef(name = "total seasons", maxWidth = md),
      seasons = colDef(maxWidth = lg),
      total_rebounds = colDef(
        name = "REBOUNDS",
        headerClass = "my-header3",
        style = list(fontWeight = "bold")
      )
    )
  )
```

## Row {height=300px}

```{r ts}
ts <-stat_dfs$total_steals |>
  SharedData$new(key = ~athlete, group = "experience")

ts |> 
  reactable(
    compact = TRUE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
    theme = stat_theme,
    columns = list(
      rank = colDef(maxWidth = sm),
      total_seasons = colDef(name = "total seasons", maxWidth = md),
      seasons = colDef(maxWidth = lg),
      total_steals = colDef(
        name = "STEALS",
        headerClass = "my-header3",
        style = list(fontWeight = "bold")
      )
    )
  )
```

```{r tb}
tb <- stat_dfs$total_blocks |>
  SharedData$new(key = ~athlete, group = "experience")

tb |> 
  reactable(
    compact = TRUE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
    theme = stat_theme,
    columns = list(
      rank = colDef(maxWidth = sm),
      total_seasons = colDef(name = "total seasons", maxWidth = md),
      seasons = colDef(maxWidth = lg),
      total_blocks = colDef(
        name = "BLOCKS",
        headerClass = "my-header3",
        style = list(fontWeight = "bold")
      )
    )
  )
```

```{r gm}
gm <- stat_dfs$goals_made |>
  SharedData$new(key = ~athlete, group = "experience")

gm |> 
  reactable(
    compact = TRUE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
    theme = stat_theme,
    columns = list(
      rank = colDef(maxWidth = sm),
      total_seasons = colDef(name = "total seasons", maxWidth = md),
      seasons = colDef(maxWidth = lg),
      goals_made = colDef(
        name = "GOALS",
        headerClass = "my-header3",
        style = list(fontWeight = "bold")
      )
    )
  )
```

## Row {height=300px}

```{r tm}
tm <- stat_dfs$threes_made |>
  SharedData$new(key = ~athlete, group = "experience")

tm |> 
  reactable(
    compact = TRUE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
    theme = stat_theme,
    columns = list(
      rank = colDef(maxWidth = sm),
      total_seasons = colDef(name = "total seasons", maxWidth = md),
      seasons = colDef(maxWidth = lg),
      threes_made = colDef(
        name = "THREES",
        headerClass = "my-header3",
        style = list(fontWeight = "bold")
      )
    )
  )
```

```{r tt}
tt <- stat_dfs$total_turnovers |>
  SharedData$new(key = ~athlete, group = "experience")

tt |> 
  reactable(
    compact = TRUE,
    highlight = TRUE,
    filterable = TRUE,
    defaultPageSize = 20,
    selection = "multiple",
    onClick = "select",
    rowStyle = list(cursor = "pointer"),
    theme = stat_theme,
    columns = list(
      rank = colDef(maxWidth = sm),
      total_seasons = colDef(name = "total seasons", maxWidth = md),
      seasons = colDef(maxWidth = lg),
      total_turnovers = colDef(
        name = "T-OVERS",
        headerClass = "my-header3",
        style = list(fontWeight = "bold")
      )
    )
  )
```

